/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as HelloWorldImport } from './routes/hello-world'
import { Route as IndexImport } from './routes/index'
import { Route as HelloWorldCounterImport } from './routes/hello-world.counter'
import { Route as HelloWorldSplatImport } from './routes/hello-world.$'

// Create/Update Routes

const HelloWorldRoute = HelloWorldImport.update({
  id: '/hello-world',
  path: '/hello-world',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HelloWorldCounterRoute = HelloWorldCounterImport.update({
  id: '/counter',
  path: '/counter',
  getParentRoute: () => HelloWorldRoute,
} as any)

const HelloWorldSplatRoute = HelloWorldSplatImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => HelloWorldRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/hello-world': {
      id: '/hello-world'
      path: '/hello-world'
      fullPath: '/hello-world'
      preLoaderRoute: typeof HelloWorldImport
      parentRoute: typeof rootRoute
    }
    '/hello-world/$': {
      id: '/hello-world/$'
      path: '/$'
      fullPath: '/hello-world/$'
      preLoaderRoute: typeof HelloWorldSplatImport
      parentRoute: typeof HelloWorldImport
    }
    '/hello-world/counter': {
      id: '/hello-world/counter'
      path: '/counter'
      fullPath: '/hello-world/counter'
      preLoaderRoute: typeof HelloWorldCounterImport
      parentRoute: typeof HelloWorldImport
    }
  }
}

// Create and export the route tree

interface HelloWorldRouteChildren {
  HelloWorldSplatRoute: typeof HelloWorldSplatRoute
  HelloWorldCounterRoute: typeof HelloWorldCounterRoute
}

const HelloWorldRouteChildren: HelloWorldRouteChildren = {
  HelloWorldSplatRoute: HelloWorldSplatRoute,
  HelloWorldCounterRoute: HelloWorldCounterRoute,
}

const HelloWorldRouteWithChildren = HelloWorldRoute._addFileChildren(
  HelloWorldRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/hello-world': typeof HelloWorldRouteWithChildren
  '/hello-world/$': typeof HelloWorldSplatRoute
  '/hello-world/counter': typeof HelloWorldCounterRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/hello-world': typeof HelloWorldRouteWithChildren
  '/hello-world/$': typeof HelloWorldSplatRoute
  '/hello-world/counter': typeof HelloWorldCounterRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/hello-world': typeof HelloWorldRouteWithChildren
  '/hello-world/$': typeof HelloWorldSplatRoute
  '/hello-world/counter': typeof HelloWorldCounterRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/hello-world' | '/hello-world/$' | '/hello-world/counter'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/hello-world' | '/hello-world/$' | '/hello-world/counter'
  id:
    | '__root__'
    | '/'
    | '/hello-world'
    | '/hello-world/$'
    | '/hello-world/counter'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HelloWorldRoute: typeof HelloWorldRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HelloWorldRoute: HelloWorldRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/hello-world"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/hello-world": {
      "filePath": "hello-world.tsx",
      "children": [
        "/hello-world/$",
        "/hello-world/counter"
      ]
    },
    "/hello-world/$": {
      "filePath": "hello-world.$.tsx",
      "parent": "/hello-world"
    },
    "/hello-world/counter": {
      "filePath": "hello-world.counter.tsx",
      "parent": "/hello-world"
    }
  }
}
ROUTE_MANIFEST_END */
